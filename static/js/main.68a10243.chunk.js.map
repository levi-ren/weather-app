{"version":3,"sources":["helpers/icons.js","components/CurrentDetails.js","components/Current.js","components/Forecast.js","App.js","serviceWorker.js","index.js"],"names":["icons","200","AM","PM","201","202","210","211","212","221","230","231","232","300","301","302","310","311","312","313","314","321","500","501","502","503","504","511","520","521","522","531","600","601","602","611","612","615","616","620","621","622","701","711","721","731","741","751","761","762","771","781","800","801","802","803","804","CurrentDetails","toggle","temp","sun","useState","sunTime","setSunTime","useEffect","sunrise","sunset","s1","Date","s2","value","getHours","getMinutes","className","Current","currentWeather","time","dateBuilder","name","main","sys","weather","date","setDate","country","setCountry","setToggle","code","countries","hasOwnProperty","onClick","id","now","meridiem","alt","src","icon","Forecast","dt","iconBuilder","setIcon","max","description","App","query","setQuery","weatherForecast","setWeatherForecast","setCurrentWeather","weatherLoading","setWeatherLoading","setTime","setweather","getWeather","city","fetch","process","REACT_APP_BASE_API","then","res","json","result","current","daily","slice","setTimeout","timeBuilder","useCallback","toLocaleString","timeZone","timezone","toLocaleTimeString","split","timeout","setInterval","clearInterval","d","abrv","months","days","getDate","getDay","getMonth","ampm","type","placeholder","onChange","evt","target","onKeyPress","key","map","values","index","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.68a10243.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  WiDayThunderstorm,\n  WiNightThunderstorm,\n  WiRainMix,\n  WiDayRain,\n  WiNightAltRain,\n  WiDayRainWind,\n  WiNightAltRainWind,\n  WiDayRainMix,\n  WiNightAltRainMix,\n  WiSnowflakeCold,\n  WiDaySnow,\n  WiNightAltSnowWind,\n  WiSmoke,\n  WiDayHaze,\n  WiDust,\n  WiDayFog,\n  WiNightFog,\n  WiSmog,\n  WiDayWindy,\n  WiNightAltCloudyWindy,\n  WiDaySunny,\n  WiDayCloudy,\n  WiNightAltCloudy,\n  WiCloudy,\n  WiNightClear,\n  WiCloud,\n  WiTornado,\n} from \"react-icons/wi\";\nimport { RiMistLine } from \"react-icons/ri\";\n\nexport const icons = {\n  200: {\n    AM: <WiDayThunderstorm />,\n    PM: <WiNightThunderstorm />,\n  },\n\n  201: {\n    AM: <WiDayThunderstorm />,\n    PM: <WiNightThunderstorm />,\n  },\n\n  202: {\n    AM: <WiDayThunderstorm />,\n    PM: <WiNightThunderstorm />,\n  },\n\n  210: {\n    AM: <WiDayThunderstorm />,\n    PM: <WiNightThunderstorm />,\n  },\n\n  211: {\n    AM: <WiDayThunderstorm />,\n    PM: <WiNightThunderstorm />,\n  },\n\n  212: {\n    AM: <WiDayThunderstorm />,\n    PM: <WiNightThunderstorm />,\n  },\n\n  221: {\n    AM: <WiDayThunderstorm />,\n    PM: <WiNightThunderstorm />,\n  },\n\n  230: {\n    AM: <WiDayThunderstorm />,\n    PM: <WiNightThunderstorm />,\n  },\n\n  231: {\n    AM: <WiDayThunderstorm />,\n    PM: <WiNightThunderstorm />,\n  },\n\n  232: {\n    AM: <WiDayThunderstorm />,\n    PM: <WiNightThunderstorm />,\n  },\n\n  300: {\n    AM: <WiRainMix />,\n    PM: <WiRainMix />,\n  },\n\n  301: {\n    AM: <WiRainMix />,\n    PM: <WiRainMix />,\n  },\n\n  302: {\n    AM: <WiRainMix />,\n    PM: <WiRainMix />,\n  },\n\n  310: {\n    AM: <WiRainMix />,\n    PM: <WiRainMix />,\n  },\n\n  311: {\n    AM: <WiRainMix />,\n    PM: <WiRainMix />,\n  },\n\n  312: {\n    AM: <WiRainMix />,\n    PM: <WiRainMix />,\n  },\n\n  313: {\n    AM: <WiRainMix />,\n    PM: <WiRainMix />,\n  },\n\n  314: {\n    AM: <WiRainMix />,\n    PM: <WiRainMix />,\n  },\n\n  321: {\n    AM: <WiRainMix />,\n    PM: <WiRainMix />,\n  },\n\n  500: {\n    AM: <WiDayRain />,\n    PM: <WiNightAltRain />,\n  },\n\n  501: {\n    AM: <WiDayRain />,\n    PM: <WiNightAltRain />,\n  },\n\n  502: {\n    AM: <WiDayRainMix />,\n    PM: <WiNightAltRainMix />,\n  },\n\n  503: {\n    AM: <WiDayRainMix />,\n    PM: <WiNightAltRainMix />,\n  },\n\n  504: {\n    AM: <WiDayRainMix />,\n    PM: <WiNightAltRainMix />,\n  },\n\n  511: {\n    AM: <WiSnowflakeCold />,\n    PM: <WiSnowflakeCold />,\n  },\n\n  520: {\n    AM: <WiDayRainWind />,\n    PM: <WiNightAltRainWind />,\n  },\n\n  521: {\n    AM: <WiDayRainWind />,\n    PM: <WiNightAltRainWind />,\n  },\n\n  522: {\n    AM: <WiDayRainMix />,\n    PM: <WiNightAltRainMix />,\n  },\n\n  531: {\n    AM: <WiDayRainWind />,\n    PM: <WiNightAltRainWind />,\n  },\n\n  600: {\n    AM: <WiDaySnow />,\n    PM: <WiNightAltSnowWind />,\n  },\n\n  601: {\n    AM: <WiDaySnow />,\n    PM: <WiNightAltSnowWind />,\n  },\n\n  602: {\n    AM: <WiDaySnow />,\n    PM: <WiNightAltSnowWind />,\n  },\n\n  611: {\n    AM: <WiDaySnow />,\n    PM: <WiNightAltSnowWind />,\n  },\n\n  612: {\n    AM: <WiDaySnow />,\n    PM: <WiNightAltSnowWind />,\n  },\n\n  615: {\n    AM: <WiDaySnow />,\n    PM: <WiNightAltSnowWind />,\n  },\n\n  616: {\n    AM: <WiDaySnow />,\n    PM: <WiNightAltSnowWind />,\n  },\n\n  620: {\n    AM: <WiDaySnow />,\n    PM: <WiNightAltSnowWind />,\n  },\n\n  621: {\n    AM: <WiDaySnow />,\n    PM: <WiNightAltSnowWind />,\n  },\n\n  622: {\n    AM: <WiDaySnow />,\n    PM: <WiNightAltSnowWind />,\n  },\n\n  701: {\n    AM: <RiMistLine />,\n    PM: <RiMistLine />,\n  },\n\n  711: {\n    AM: <WiSmoke />,\n    PM: <WiSmoke />,\n  },\n\n  721: {\n    AM: <WiDayHaze />,\n    PM: <WiDayHaze />,\n  },\n\n  731: {\n    AM: <WiDust />,\n    PM: <WiDust />,\n  },\n\n  741: {\n    AM: <WiDayFog />,\n    PM: <WiNightFog />,\n  },\n\n  751: {\n    AM: <WiDust />,\n    PM: <WiDust />,\n  },\n\n  761: {\n    AM: <WiDust />,\n    PM: <WiDust />,\n  },\n\n  762: {\n    AM: <WiSmog />,\n    PM: <WiSmog />,\n  },\n\n  771: {\n    AM: <WiDayWindy />,\n    PM: <WiNightAltCloudyWindy />,\n  },\n\n  781: {\n    AM: <WiTornado />,\n    PM: <WiTornado />,\n  },\n\n  800: {\n    AM: <WiDaySunny />,\n    PM: <WiNightClear />,\n  },\n\n  801: {\n    AM: <WiDayCloudy />,\n    PM: <WiNightAltCloudy />,\n  },\n\n  802: {\n    AM: <WiCloud />,\n    PM: <WiCloud />,\n  },\n\n  803: {\n    AM: <WiCloudy />,\n    PM: <WiCloudy />,\n  },\n\n  804: {\n    AM: <WiCloudy />,\n    PM: <WiCloudy />,\n  },\n};\n","import React, { useEffect, useState } from \"react\";\nimport { WiSunrise, WiSunset, WiThermometer } from \"react-icons/wi\";\n\nconst CurrentDetails = ({ toggle, temp, sun }) => {\n  const [sunTime, setSunTime] = useState(\"\");\n\n  useEffect(() => {\n    const { sunrise, sunset } = sun;\n    const s1 = new Date(sunrise * 1000);\n    const s2 = new Date(sunset * 1000);\n    const value = {\n      sunrise: `${\n        s1.getHours() > 12 ? s1.getHours() - 12 : s1.getHours()\n      }:${s1.getMinutes()}`,\n      sunset: `${\n        s2.getHours() > 12 ? s2.getHours() - 12 : s2.getHours()\n      }:${s2.getMinutes()}`,\n    };\n    setSunTime(value);\n  }, [sun]);\n\n  return (\n    <div className={`detail-contents ${!toggle ? \"inactive\" : \"\"}`}>\n      <div>\n        <div>\n          <WiSunrise />\n          <span>{sunTime.sunrise} am</span>\n        </div>\n        <div>\n          <WiThermometer />\n          <span>\n            {temp}\n            &deg;c\n          </span>\n        </div>\n        <div>\n          <WiSunset />\n          <span>{sunTime.sunset} pm</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentDetails;\n","import React, { useEffect, useState } from \"react\";\nimport countries from \"../helpers/country-codes.json\";\nimport CurrentDetails from \"./CurrentDetails\";\n\nconst Current = ({ currentWeather, time, dateBuilder }) => {\n  const { name, main, sys, weather } = currentWeather;\n  const [date, setDate] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [toggle, setToggle] = useState(false);\n\n  useEffect(() => {\n    setDate(dateBuilder(new Date()));\n  }, [dateBuilder]);\n\n  const getCountry = (code) => {\n    if (countries.hasOwnProperty(code)) {\n      return countries[code];\n    } else {\n      return code;\n    }\n  };\n\n  useEffect(() => {\n    setCountry(getCountry(sys.country));\n  }, [sys.country]);\n\n  return (\n    <div onClick={() => setToggle(!toggle)}>\n      <div className=\"location\">\n        {name}, {country}\n      </div>\n\n      <div id=\"time-icon\">\n        <div className=\"time\">\n          {time.now} <span>{time.meridiem}</span>\n        </div>\n        <img\n          alt=\"icon\"\n          className=\"icon\"\n          src={`http://openweathermap.org/img/wn/${weather[0].icon}.png`}\n        />\n      </div>\n\n      <div id=\"date-temp\">\n        <div className=\"date\">{date}</div>\n        <div className=\"temp\">\n          {`${weather[0].main} ${main.temp}`}\n          &deg;c\n        </div>\n      </div>\n\n      <CurrentDetails toggle={toggle} temp={main.temp} sun={sys} />\n    </div>\n  );\n};\n\nexport default Current;\n","import React, { useEffect, useState } from \"react\";\n\nconst Forecast = ({\n  dt,\n  meridiem,\n  temp,\n  weather,\n  dateBuilder,\n  iconBuilder,\n}) => {\n  const [date, setDate] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n\n  useEffect(() => {\n    setDate(dateBuilder(new Date(dt * 1000), true));\n  }, [dateBuilder, dt]);\n\n  useEffect(() => {\n    setIcon(iconBuilder(weather[0].id, meridiem));\n  }, [iconBuilder, weather, meridiem]);\n\n  return (\n    <div className=\"forecasts\">\n      <div className=\"forecast-date\">{date}</div>\n      <div className=\"forecast-icon\">{icon}</div>\n      <div className=\"forecast-details\">\n        <span id=\"temp\">{temp.max}&deg;c</span>\n        <span id=\"desc\">{weather[0].description}</span>\n      </div>\n      <div className=\"forecast-infos\"></div>\n    </div>\n  );\n};\n\nexport default Forecast;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { icons } from \"./helpers/icons\";\nimport { WiNa } from \"react-icons/wi\";\nimport Current from \"./components/Current\";\nimport Forecast from \"./components/Forecast\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weatherForecast, setWeatherForecast] = useState(\"\");\n  const [currentWeather, setCurrentWeather] = useState(\"\");\n  const [weatherLoading, setWeatherLoading] = useState(true);\n  const [time, setTime] = useState(\"\");\n  const [toggle, setToggle] = useState(false);\n\n  const [weather, setweather] = useState(\"\");\n\n  const getWeather = (city) => {\n    setWeatherLoading(true);\n    fetch(`${process.env.REACT_APP_BASE_API}${city ? city : \"new york\"}`)\n      .then((res) => res.json())\n      .then((result) => {\n        const { current, daily } = result;\n        setCurrentWeather(current);\n        setWeatherForecast(daily.slice(0, 6));\n        setweather(result);\n        setQuery(\"\");\n        setTimeout(() => setWeatherLoading(false), 2000);\n      });\n  };\n\n  useEffect(getWeather, []);\n\n  const search = (evt) => {\n    if (evt.key === \"Enter\") {\n      getWeather(query);\n    }\n  };\n\n  const timeBuilder = useCallback(() => {\n    const date = new Date().toLocaleString(\"en-US\", {\n      timeZone: weather.timezone,\n    });\n    const [now, meridiem] = new Date(date).toLocaleTimeString().split(\" \");\n\n    setTime({ now, meridiem });\n  }, [weather.timezone]);\n\n  useEffect(() => {\n    if (weather) {\n      const timeout = setInterval(() => timeBuilder(), 1000);\n      return () => clearInterval(timeout);\n    }\n  }, [weather, timeBuilder]);\n\n  const dateBuilder = useCallback((d, abrv = false) => {\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n    return !abrv\n      ? `${days[d.getDay()]}, ${d.getDate()} ${months[d.getMonth()]}`\n      : `${d.getDate()} ${days[d.getDay()]} `;\n  }, []);\n\n  const iconBuilder = useCallback((id, ampm) => {\n    if (icons.hasOwnProperty(id)) {\n      return icons[id][ampm];\n    } else {\n      return <WiNa />;\n    }\n  }, []);\n\n  return (\n    <div className={`app ${time.meridiem === \"PM\" ? \"pm\" : \"\"}`}>\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter a city name...\"\n            className=\"search-bar\"\n            value={query}\n            onChange={(evt) => setQuery(evt.target.value)}\n            onKeyPress={search}\n          ></input>\n        </div>\n\n        <div\n          className={`details ${weatherLoading ? \"loading\" : \"\"}`}\n          onClick={() => setToggle(!toggle)}\n        >\n          {weatherLoading ? (\n            <span className=\"loader\"></span>\n          ) : (\n            <>\n              {weather && (\n                <Current\n                  currentWeather={currentWeather}\n                  time={time}\n                  dateBuilder={dateBuilder}\n                />\n              )}\n            </>\n          )}\n        </div>\n\n        <div\n          className={`forecasts-container ${weatherLoading ? \"loading\" : \"\"}`}\n        >\n          {weatherLoading ? (\n            <span className=\"loader\"></span>\n          ) : (\n            <>\n              {weather &&\n                weatherForecast.map((values, index) => {\n                  const { dt, temp, weather } = values;\n                  return (\n                    <Forecast\n                      dt={dt}\n                      meridiem={time.meridiem}\n                      temp={temp}\n                      weather={weather}\n                      dateBuilder={dateBuilder}\n                      iconBuilder={iconBuilder}\n                      key={index}\n                    />\n                  );\n                })}\n            </>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}